import cv2
import numpy as np

def normalize_brightness(image_path, output_path=None):
    # Load the image
    img = cv2.imread(image_path)

    if img is None:
        raise FileNotFoundError(f"Could not load image: {image_path}")

    # Convert to YCrCb color space (Y = brightness)
    img_y_cr_cb = cv2.cvtColor(img, cv2.COLOR_BGR2YCrCb)
    
    # Split channels
    y, cr, cb = cv2.split(img_y_cr_cb)

    # Normalize the Y channel (brightness)
    y_normalized = cv2.equalizeHist(y)

    # Merge channels back
    img_y_cr_cb_normalized = cv2.merge([y_normalized, cr, cb])

    # Convert back to BGR
    result_img = cv2.cvtColor(img_y_cr_cb_normalized, cv2.COLOR_YCrCb2BGR)

    # Optionally save the result
    if output_path:
        cv2.imwrite(output_path, result_img)

    return result_img

# Example usage
if __name__ == "__main__":
    input_image = "satellite.jpg"           # Replace with your image path
    output_image = "normalized_satellite.jpg"

    result = normalize_brightness(input_image, output_image)
    print("Brightness normalization completed and saved as:", output_image)